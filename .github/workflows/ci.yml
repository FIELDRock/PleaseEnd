name: CI - Test Source Code and Docker Image

on:
  push:
    branches:
      - '*'

jobs:
  test-backend-source-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set up Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: 20
      
      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install
      
      - name: Run Jest Tests for Backend
        run: |
          cd backend
          npm run test-back

  build-backend-docker:
    needs: test-backend-source-code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build Docker Image for Backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest -f backend/Dockerfile .
      
      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest
      
      - name: Pull and Run Docker Image for Backend
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest
          docker run -d --name test-backend-container \
            --memory="8g" \
            --memory-swap="16g" \
            --memory-reservation="4g" \
            ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest
      
      - name: Check Memory Usage
        run: docker exec test-backend-container free -h
      
      - name: Run Automated Tests in Docker Container
        env:
          NODE_OPTIONS: --max_old_space_size=6144
        run: |
          docker exec test-backend-container npm run test-back \
            -- --maxWorkers=2 \
            --runInBand \
            --verbose
      
      - name: Clean Up Docker Container
        if: always()
        run: |
          docker stop test-backend-container
          docker rm test-backend-container